node('mvn') {
   // define commands
   def mvnCmd = "mvn"

   stage ('Build') {
        git branch: 'master', url: 'http://gogs:3000/heewon1.kim/openshift3mlbparks.git'
        sh "${mvnCmd} clean install -P openshift -DskipTests=true"
   }
   
   stage ('Test - Static Analysis') {
       sh "${mvnCmd} sonar:sonar -Dsonar.host.url=http://sonarqube:9000 -DskipTests=true"
   }
   
   stage ('Test - Hosts/Ansible') {
        parallel (
         'Ping Hosts': {
            ansiblePlaybook( 
                playbook: '/home/jenkins/ansible/ping.yml',
                inventory: '/home/jenkins/ansible/hosts', 
                credentialsId: '62bcb5c5-e54a-4228-bc3c-9f238af99c76', 
                colorized: true,
                extras: '--user ec2-user',
                extraVars: [
                    hosts: 'all'
                ]
            ) 
         },
         'Check Syntax': {
            ansiblePlaybook( 
                playbook: '/home/jenkins/ansible/warDeploy.yml',
                inventory: '/home/jenkins/ansible/hosts', 
                credentialsId: '62bcb5c5-e54a-4228-bc3c-9f238af99c76', 
                sudo: true,
                colorized: true,
                extras: '--user ec2-user --syntax-check',
                extraVars: [
                    hosts: 'all'
                ]
            ) 
         },
         'Check dry-run': {
            ansiblePlaybook( 
                playbook: '/home/jenkins/ansible/warDeploy.yml',
                inventory: '/home/jenkins/ansible/hosts', 
                credentialsId: '62bcb5c5-e54a-4228-bc3c-9f238af99c76', 
                sudo: true,
                colorized: true,
                extras: '--user ec2-user --check --diff',
                extraVars: [
                    hosts: 'all'
                ]
            ) 
         }
      )    
   }
   
   stage ('Deploy to Stage') {
        ansiblePlaybook( 
            playbook: '/home/jenkins/ansible/warDeploy.yml',
            inventory: '/home/jenkins/ansible/hosts', 
            credentialsId: '62bcb5c5-e54a-4228-bc3c-9f238af99c76', 
            sudo: true,
            colorized: true,
            extras: '--user ec2-user',
            extraVars: [
                hosts: 'stage'
            ]
        )
   }
   
   stage ('Wait for the input') {
       timeout(time:5, unit:'MINUTES') {
        input message: "Promote to PRODUCTION?", ok: "Promote"
     }
   }
   
   stage ('Deploy to Production') {
        ansiblePlaybook( 
            playbook: '/home/jenkins/ansible/warDeploy.yml',
            inventory: '/home/jenkins/ansible/hosts', 
            credentialsId: '62bcb5c5-e54a-4228-bc3c-9f238af99c76', 
            sudo: true,
            colorized: true,
            extras: '--user ec2-user',
            extraVars: [
                hosts: 'production'
            ]
        )
   }
}
